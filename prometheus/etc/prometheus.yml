# my global config
global:
  scrape_interval: 30s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  scrape_timeout: 15s # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "alert.rules"
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]

  - job_name: "node-exporter"
    static_configs:
      - targets: 
          - "ec2-3-38-143-221.ap-northeast-2.compute.amazonaws.com:9100"
          - "ec2-3-39-245-221.ap-northeast-2.compute.amazonaws.com:9100"
          - "ec2-3-37-191-188.ap-northeast-2.compute.amazonaws.com:9100"

  - job_name: "kafka"
    static_configs:
      - targets:
          - "ec2-3-38-143-221.ap-northeast-2.compute.amazonaws.com:8080"
          - "ec2-3-39-245-221.ap-northeast-2.compute.amazonaws.com:8080"
          - "ec2-3-37-191-188.ap-northeast-2.compute.amazonaws.com:8080"
        labels:
          env: "dev"

  - job_name: "zookeeper"
    static_configs:
      - targets:
          - "ec2-3-38-143-221.ap-northeast-2.compute.amazonaws.com:8080"
          - "ec2-3-39-245-221.ap-northeast-2.compute.amazonaws.com:8080"
          - "ec2-3-37-191-188.ap-northeast-2.compute.amazonaws.com:8080"
        labels:
          env: "dev"

  - job_name: "connect"
    static_configs:
      - targets:
          - "ksqldb-01:8077"
          - "ksqldb-02:8077"
        labels:
          env: "dev"
          cluster: "cluster1"

  - job_name: "schemaregistry"
    static_configs:
      - targets:
          - "ksqldb-01:8078"
          - "ksqldb-02:8078"
        labels:
          env: "dev"

  - job_name: "ksqldb"
    static_configs:
      - targets:
          - "ksqldb-01:8076"
          - "ksqldb-02:8076"
        labels:
          env: "dev"

  #- job_name: "restproxy"
  #  static_configs:
  #    - targets:
  #        - "restproxy:1234"
  #      labels:
  #        env: "dev"

  # No producer for the moment in cp-demo
  #  - job_name: 'producer'
  #    static_configs:
  #      - targets:
  #          - 'producer:1234'
  #        labels:
  #          env: 'dev'

  # No consumer for the moment in cp-demo
  #  - job_name: 'consumer'
  #    static_configs:
  #      - targets:
  #          - "consumer:1234"
  #        labels:
  #          env: 'dev'

  - job_name: "kafka-lag-exporter"
    static_configs:
      - targets:
          - "kafka-lag-exporter:8000"
        labels:
          env: "dev"

  - job_name: Confluent Cloud
    scrape_interval: 1m
    scrape_timeout: 1m
    honor_timestamps: true
    static_configs:
      - targets:
        - api.telemetry.confluent.cloud
    scheme: https
    basic_auth:
      username: XXXX
      password: XXXX
    metrics_path: /v2/metrics/cloud/export
    params:
      "resource.kafka.id":
        - lkc-xxxxxx
        - lkc-xxxxxx
      "resource.schema_registry.id":
        - lsrc-xxxxx

