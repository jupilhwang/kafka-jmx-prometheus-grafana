# my global config
global:
  scrape_interval: 30s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 30s # Evaluate rules every 15 seconds. The default is every 1 minute.
  scrape_timeout: 5s # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
# alerting:
#   alertmanagers:
#     - static_configs:
#         - targets:
          # - alertmanager:9093

# remote_write:
#   - url: http://localhost:9090/api/v1/write
#     queue_config:
#       #capacity: 2500
#       #max_shards: 100
#       #min_shards: 1
#       max_samples_per_send: 500000
#       #batch_send_deadline: 5s
#       #min_backoff: 1s
#       #max_backoff: 1m

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
# rule_files:
#   - "alert.rules"
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "kafka-lag-exporter"
    static_configs:
      - targets:
         - "kafka-lag-exporter:8000"
        labels:
          env: "dev"

  # - job_name: "confluent-telemetry-metrics"
  #   static_configs:
  #     - targets:
  #       - 172.31.62.53:12345

  - job_name: kafka-connect
    static_configs:
      - targets:
          - 172.31.54.185:8077
        labels:
          env: "dev"
          cluster: "kafka-connect"

  - job_name: Confluent Cloud
    scrape_interval: 1m
    scrape_timeout: 1m
    honor_timestamps: true
    static_configs:
      - targets:
        - api.telemetry.confluent.cloud
    scheme: https
    basic_auth:
      username: T67T7MIV2DYAABKQ
      password: 1poDmSYLFXKtVnXk4VBDd8qHsnc7iwikKH3lUn3bkdlbwV326tk5s+d6baLvtleK
    metrics_path: /v2/metrics/cloud/export
    params:
      "resource.kafka.id":
        - lkc-v1md00
      "resource.schema_registry.id":
        - lsrc-631od3


